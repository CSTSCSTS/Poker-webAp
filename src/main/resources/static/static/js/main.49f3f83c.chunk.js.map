{"version":3,"sources":["loginServicePopUp.js","ranking.js","PokerConstNumber.js","commonHeader.js","Potal.js","bet.js","PokerConstMessage.js","PokerField.js","UserRegister.js","SystemError.js","SessionTimeOut.js","forbidden.js","LoginServicePopUp.js","App.js","serviceWorker.js","index.js","logo.svg","poker.png"],"names":["LoginBonusPopup","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isOpen","userName","e","setState","react_default","a","createElement","lib_default","reactstrap_es","id","onClick","handleToClose","bind","Component","Ranking","ranking","moneyRanking","moneyRankingList","i","length","push","ranking_RankingItem","rankingItem","rank","border","ailgn","width","height","RankingItem","username","money","UN_AUTHORIZE_ERROR_CODE","CommonHeader","_this2","request","require","preventDefault","get","then","res","body","catch","err","response","status","PokerConstNumber","history","pathname","color","light","expand","inline","handleToRanking","src_ranking_0","withRouter","Potal","src_commonHeader","loginServicePopUp","undefined","location","class","md","size","offset","Link","to","src","Poker","Bet","betMoney","errorMessage","event","target","value","errorList","nullOrEmptyCheck","inputValueIsZeroCheck","onlyNumberCheck","post","responseType","type","send","jokerIncluded","pokerPrepare","pokerPhaseChange","updateBetMoney","message","test","map","item","bet_MoneyInfo","min","onChange","betMoneyHandleChange","block","handleSubmit","MoneyInfo","PokerField","pokerPhase","setAfterPokerMoney","afterPokerMoney","fieldInfo","deck","playerHands","computerHands","surrender","isBattle","stateReset","isFinishedChange","playerRole","computerRole","winner","handsChange","setHands","hand","isChange","currentHands","targetIndex","findIndex","h","number","splice","src_bet","className","PokerField_CpuHands","hands","PokerField_PlayButton","PokerField_WinOrLossJudge","PokerField_PlayerHands","PokerField_HandChangeButton","PokerField_AfterPokerPlayMoney","PokerField_AfterPokerPlayingButtons","CpuHands","cpuHands","text","WinOrLossJudge","roleName","PlayerHands","PokerField_Hand","Hand","changeStatus","_this3","HandChangeButton","handleToChange","url","window","jsonPlayerHands","JSON","stringify","_this4","jsonDeck","jsonComputerHands","pokerInfo","finishedChange","PlayButton","_this5","toString","slice","handleToPlaySubmit","handleSurrenderSubmit","AfterPokerPlayMoney","style","margin","AfterPokerPlayingButtons","PokerField_RetryButton","PokerField_RestartButton","RetryButton","handleToRePlay","_this6","_this7","RestartButton","handleToRestart","_this8","UserRegister","password","confirmationPassword","lengthOverCheck","passwordSameCheck","limit","sm","FormGroup","usernameHandleChange","passwordHandleChange","confirmationPasswordHandleChange","handleCancel","SystemError","SessionTimeOut","href","Forbidden","App","BrowserRouter","Switch","Route","exact","path","component","PokerStart","handleToBet","LoginServicePopUp","handleChange","name","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.49f3f83c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Modal from \"react-modal\";\r\nimport { Button } from 'reactstrap';\r\n\r\nclass LoginBonusPopup extends Component {\r\n\r\n\tconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: this.props.isOpen,\r\n      userName: this.props.userName\r\n    };\r\n  }\r\n\r\n\thandleToClose(e) {\r\n\t\tthis.setState({isOpen: false});\r\n\t}\r\n\r\n\trender() {\r\n    return (\r\n      <div>\r\n        <Modal\r\n          isOpen={this.state.isOpen}\r\n        >\r\n         {this.state.userName}さん本日初ログインです。100円贈呈します。\r\n        <Button id=\"closeBunnton\" onClick={this.handleToClose.bind(this)}>閉じる</Button>\r\n      </Modal>\r\n\r\n\t    </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default LoginBonusPopup;\r\n","import React, { Component } from 'react';\r\nimport './ranking.css';\r\nimport './App.css';\r\nimport { withRouter } from 'react-router';\r\nimport {BrowserRouter, Switch, Route, Link } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Navbar } from 'reactstrap';\r\nimport Modal from \"react-modal\";\r\n\r\nclass Ranking extends Component{\r\n\r\n\trender() {\r\n    const ranking = [];\r\n    const moneyRanking = this.props.ranking.moneyRanking.moneyRankingList;\r\n    // ランキング表示要素作成\r\n    for(let i = 1; i < moneyRanking.length + 1; i++) {\r\n    \tranking.push(\r\n    \t  <RankingItem\r\n          rankingItem={moneyRanking[i - 1]}\r\n    \t    rank={i}\r\n        />\r\n    \t)\r\n    }\r\n\r\n    return (\r\n      <div id=\"ranking\">\r\n        <table border=\"1\" ailgn=\"center\" width=\"1000\" height=\"100\">\r\n          <th>順位</th>\r\n          <th>ユーザー名</th>\r\n          <th>所持金</th>\r\n          {ranking}\r\n        </table>\r\n\t    </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass CloseButton extends Component{\r\n\r\n\thandleToClose() {\r\n\t\tthis.props.handleToClose();\r\n\t}\r\n\r\n\trender() {\r\n    return (\r\n    \t\t<Button id=\"closeBunnton\"  onClick={this.handleToClose.bind(this)}>閉じる</Button>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\tclass RankingItem extends Component{\r\n\t\trender() {\r\n\t    return (\r\n\t        <tr>\r\n\t          <td>{this.props.rank}</td>\r\n\t          <td>{this.props.rankingItem.username}</td>\r\n\t          <td>{this.props.rankingItem.money}</td>\r\n\t        </tr>\r\n\t    );\r\n\t  }\r\n}\r\n\r\n\texport default Ranking;","const UN_EXPECTED_ERROR_CODE = 500;\r\nconst UN_AUTHORIZE_ERROR_CODE = 401;\r\nconst FORBIDDEN_ERROR_CODE = 403;\r\nconst USER_NAME_MAX_LENGTH = 255;\r\nconst PASSWORD_MAX_LENGTH = 255;\r\n\r\nexport {\r\n\tUN_EXPECTED_ERROR_CODE,\r\n\tFORBIDDEN_ERROR_CODE,\r\n\tUN_AUTHORIZE_ERROR_CODE,\r\n\tUSER_NAME_MAX_LENGTH,\r\n\tPASSWORD_MAX_LENGTH\r\n};","import React, { Component } from 'react';\r\nimport './commonHeader.css';\r\nimport './ranking.css';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { withRouter } from 'react-router';\r\nimport {BrowserRouter, Switch, Route, Link } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Navbar } from 'reactstrap';\r\nimport Modal from \"react-modal\";\r\nimport Ranking from './ranking';\r\nimport * as PokerConstNumber from './PokerConstNumber.js';\r\n\r\nclass CommonHeader extends Component {\r\n\r\n\tconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      ranking: null\r\n    };\r\n  }\r\n\r\n\t// ランキング情報を取得する\r\n\thandleToRanking(e) {\r\n\t\tvar request = require('superagent');\r\n\t    e.preventDefault();\r\n\t    const url = '/ranking';\r\n\t    request\r\n\t    .get(url)\r\n\t    .then(res => {\r\n\t    \tthis.setState({isOpen: true, ranking: res.body});\r\n\t    })\r\n\t    .catch(err => {\r\n     \t if(err.response.body.status === PokerConstNumber.UN_AUTHORIZE_ERROR_CODE) {\r\n      \t\tthis.props.history.push({\r\n        \t\tpathname: '/session-timeout'\r\n        \t})\r\n    \t }\r\n     \t if(err.response.body.status === PokerConstNumber.FORBIDDEN_ERROR_CODE) {\r\n       \t\tthis.props.history.push({\r\n         \t\tpathname: '/forbidden'\r\n         \t})\r\n     \t }\r\n     \t if(err.response.body.status === PokerConstNumber.UN_EXPECTED_ERROR_CODE) {\r\n       \t this.props.history.push({\r\n       \t\t pathname: '/error'\r\n       \t })\r\n     \t }\r\n\t\t\t});\r\n\r\n\t  }\r\n\t// ランキングポップアップを閉じる\r\n\thandleToClose(e) {\r\n\t\tthis.setState({isOpen: false});\r\n\t}\r\n\r\n\trender() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <Form inline>\r\n            <Button id=\"rankingButton\" onClick={this.handleToRanking.bind(this)}>ランキング表示をする</Button>\r\n          </Form>\r\n\t      </Navbar>\r\n\t      <Modal\r\n\t        isOpen={this.state.isOpen}\r\n\t      >\r\n\t        <h2 id=\"user_register_title\">茶 圓 ポ ー カ ー ランキング</h2>\r\n\t        <Ranking\r\n\t          ranking={this.state.ranking}\r\n\t          handleToClose={this.handleToClose}\r\n\t        />\r\n\t        <Button id=\"closeBunnton\"  onClick={this.handleToClose.bind(this)}>閉じる</Button>\r\n\t      </Modal>\r\n\t    </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(CommonHeader);","import React, { Component } from 'react';\r\nimport LoginServicePopUp from './loginServicePopUp';\r\nimport { withRouter } from 'react-router';\r\nimport CommonHeader from './commonHeader'\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport './potal.css';\r\nimport Poker from './poker.png'\r\n\r\n\r\nclass Potal extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CommonHeader />\r\n        <LoginServicePopUp\r\n          isOpen={this.props.location.state === undefined ? false : this.props.location.state.isOpen}\r\n          userName={this.props.location.state === undefined ? '' : this.props.location.state.userName}\r\n        />\r\n      \t<h1 id=\"potaltitle\">ポータル</h1>\r\n      \t<div class=\"gamelist\">\r\n      \t<div class=\"gamelisttitle\">\r\n      \t  <span>ゲーム一覧</span>\r\n      \t</div>\r\n\t        <Container>\r\n  \t        <Row>\r\n  \t          <Col md={{ size: 6, offset: 1 }}>\r\n  \t          <Link to=\"/start\"><img src={Poker} width=\"150\" height=\"200\" /></Link>\r\n  \t          </Col>\r\n  \t  \t    </Row>\r\n  \t        <Row>\r\n    \t        <Col md={{ size: 6, offset: 1 }}>\r\n                <span>ポーカー</span>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n  \t        <Col md={{ size: 6, offset: 1 }}>\r\n              <span>CPUと勝負しよう！！！</span>\r\n            </Col>\r\n          </Row>\r\n\t    </Container>\r\n\t    </div>\r\n\t  </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(Potal);","import React, { Component } from 'react';\r\nimport { Button, Container, Form, FormGroup, Input } from 'reactstrap';\r\nimport { withRouter } from 'react-router';\r\nimport InputNumber from \"rmc-input-number\";\r\nimport CommonHeader from './commonHeader'\r\nimport './bet.css'\r\nimport * as PokerConstNumber from './PokerConstNumber.js';\r\nimport * as PokerConstMessage from './PokerConstMessage.js';\r\n\r\nclass Bet extends Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n      this.state = {\r\n        betMoney: '',\r\n        errorMessage: []\r\n\t  };\r\n\t}\r\n\r\n\tbetMoneyHandleChange(event) {\r\n\t\tthis.setState({betMoney: event.target.value});\r\n\t}\r\n\r\n\thandleSubmit(e) {\r\n\t// リクエスト前に必須チェック・0円チェックを実施\r\n\t\tvar errorList = [];\r\n\t\t// 必須チェック\r\n\t\tthis.nullOrEmptyCheck(errorList, this.state.betMoney, PokerConstMessage.betMoneyNotInputMessage);\r\n\t\t// 0円チェック\r\n\t\tthis.inputValueIsZeroCheck(errorList, this.state.betMoney, PokerConstMessage.betMoneyisZeroMessage);\r\n\t  // 正規表現チェック(数字以外が存在しないか)\r\n\t\tthis.onlyNumberCheck(errorList, this.state.betMoney, PokerConstMessage.betMoneyExpectNumberMessage);\r\n\r\n    if(errorList.length != 0) {\r\n      this.setState({errorMessage: errorList});\r\n      return;\r\n    }\r\n\r\n    var request = require('superagent');\r\n\t    e.preventDefault();\r\n\t    const url = '/config';\r\n\t    request\r\n\t    .post(url)\r\n\t    .responseType('text')\r\n\t    .type('form')\r\n\t    .send({betMoney: this.state.betMoney ,jokerIncluded: this.props.jokerIncluded})\r\n\t    .then(res => {\r\n\t    \tthis.props.pokerPrepare(res.body);\r\n\t    \tthis.props.pokerPhaseChange('HANDCHANGE');\r\n\t    \tthis.props.updateBetMoney(this.state.betMoney);\r\n\t    })\r\n\t    .catch(err => {\r\n\t    \tif(err.response.body.status === PokerConstNumber.UN_AUTHORIZE_ERROR_CODE) {\r\n\t    \t\tthis.props.history.push({\r\n\t      \t\tpathname: '/session-timeout'\r\n\t      \t})\r\n\t      \treturn;\r\n\t    \t}\r\n\t    \tif(err.response.body.status === PokerConstNumber.UN_EXPECTED_ERROR_CODE) {\r\n\t    \t// システムエラー画面へ遷移\r\n      \t\tthis.props.history.push({\r\n  \t\t\t\t  pathname: '/error'\r\n  \t\t\t  })\r\n      \t}\r\n        errorList.push(err.response.body.message)\r\n        this.setState({errorMessage: errorList})\r\n\t\t\t});\r\n\r\n\t  }\r\n\r\n\t// 必須チェック\r\n\tnullOrEmptyCheck(errorList, value, errorMessage) {\r\n\t\tif(!(value)) {\r\n\t\t\terrorList.push(errorMessage);\r\n\t\t}\r\n\t\treturn errorList;\r\n\t}\r\n\r\n  // 0円チェック\r\n\tinputValueIsZeroCheck(errorList, value, errorMessage) {\r\n\t\tif((value) && value == 0) {\r\n      errorList.push(errorMessage);\r\n\t\t}\r\n\t\treturn errorList;\r\n\t}\r\n\r\n\t// 正規表現チェック(数字以外が存在しないか)\r\n\tonlyNumberCheck(errorList, value, errorMessage) {\r\n\t\tconst pattern = /^[0-9]*$/;\r\n\t\tif(!pattern.test(value)) {\r\n\t\t\terrorList.push(errorMessage);\r\n\t\t}\r\n\t\treturn errorList\r\n\t}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CommonHeader />\r\n        <h1 id=\"title\">茶 圓 ポ ー カ ー プレイ</h1>\r\n        <Container id=\"form\">\r\n        <Form>\r\n        <div>\r\n        {this.state.errorMessage.map((item) => (\r\n        \t\t<p class=\"alert alert-danger\">{item}</p>\r\n        ))}\r\n        </div>\r\n        <FormGroup>\r\n        \t<h2 class=\"text-center\">ベット金額を入力してください</h2>\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <MoneyInfo\r\n            money={this.props.money}\r\n          />\r\n        </FormGroup>\r\n        <FormGroup>\r\n          <Input type=\"text\" min={0} value={this.state.betMoney} onChange={this.betMoneyHandleChange.bind(this)}/>\r\n        </FormGroup>\r\n  \t    <Button block onClick={this.handleSubmit.bind(this)}>ベット</Button>\r\n      </Form>\r\n      </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nclass MoneyInfo extends Component {\r\n  render() {\r\n    return (\r\n      <div class=\"center-block\">\r\n        現在の所持金: {this.props.money}円\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Bet);","import * as PokerConstNumber from './PokerConstNumber.js';\r\n\r\nconst userNameNotInputMessage = \"ユーザー名が未入力です。\";\r\nconst passwordNotInputMessage = \"パスワードが未入力です。\";\r\nconst confirmationPasswordNotInputMessage = \"パスワード(確認)が未入力です。\";\r\nconst userNameExceedMaxLengthMessage = \"ユーザー名が\" + PokerConstNumber.USER_NAME_MAX_LENGTH + \"文字を超えています。\";\r\nconst passwordExceedMaxLengthMessage = \"パスワードが\" + PokerConstNumber.PASSWORD_MAX_LENGTH + \"文字を超えています。\";\r\nconst passwordNotMatchMessage = \"パスワードとパスワード(確認)が一致していません。\";\r\nconst betMoneyNotInputMessage = \"ベット額が未入力です。\";\r\nconst betMoneyisZeroMessage =  \"ベット額は1円以上になるように入力してください。\";\r\nconst betMoneyExpectNumberMessage = \"数字以外が入力されています。\";\r\n\r\nexport {\r\n\tuserNameNotInputMessage,\r\n\tpasswordNotInputMessage,\r\n\tconfirmationPasswordNotInputMessage,\r\n\tuserNameExceedMaxLengthMessage,\r\n\tpasswordExceedMaxLengthMessage,\r\n\tpasswordNotMatchMessage,\r\n\tbetMoneyNotInputMessage,\r\n\tbetMoneyisZeroMessage,\r\n\tbetMoneyExpectNumberMessage\r\n};","import React, { Component } from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input } from 'reactstrap';\r\nimport { withRouter } from 'react-router'\r\nimport Bet from './bet';\r\nimport CommonHeader from './commonHeader'\r\nimport './pokerField.css';\r\nimport * as PokerConstNumber from './PokerConstNumber.js';\r\n\r\nclass PokerField extends Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n      this.state = {\r\n        pokerPhase: 'BET',\r\n        isBattle: false,\r\n        money: this.props.location.state.betMoney.money,\r\n        betMoney: 0,\r\n        deck: null,\r\n        playerHands: null,\r\n        computerHands: null,\r\n        isFinishedChange: false,\r\n        playerRole: null,\r\n        computerRole: null,\r\n        winner: null,\r\n        afterPokerMoney: null\r\n\t  };\r\n\t}\r\n\r\n\tpokerPhaseChange = (pokerPhase) => {\r\n\t\tthis.setState({\r\n\t\t\tpokerPhase: pokerPhase\r\n\t\t})\r\n\t}\r\n\r\n\tsetAfterPokerMoney = (money) => {\r\n\t\tthis.setState({\r\n\t\t\tafterPokerMoney: money\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tpokerPrepare = (fieldInfo) => {\r\n\t\tthis.setState({\r\n\t\t\tdeck: fieldInfo.deck,\r\n      playerHands: fieldInfo.playerHands,\r\n      computerHands: fieldInfo.computerHands\r\n\t\t})\r\n\t}\r\n\r\n\t// 所持金更新\r\n\tupdateBetMoney = (betMoney) => {\r\n\t\tthis.setState({\r\n\t\t\tbetMoney: betMoney\r\n\t\t})\r\n\t}\r\n\r\n\t// 勝負を降りるフラグをtrueにする。\r\n\tsurrender = () => {\r\n\t\tthis.setState({\r\n\t    isBattle: true\r\n\t\t})\r\n\t}\r\n\r\n\tstateReset = (money) => {\r\n\t\tthis.setState({\r\n\t\t\tpokerPhase: 'BET',\r\n      isBattle: false,\r\n      money: money,\r\n      betMoney: 0,\r\n      deck: null,\r\n      playerHands: null,\r\n      computerHands: null,\r\n      isFinishedChange: false,\r\n      playerRole: null,\r\n      computerRole: null,\r\n      winner: null\r\n    })\r\n\t}\r\n\r\n\thandsChange = (playerHands, computerHands, isFinishedChange, playerRole, computerRole, winner) => {\r\n\t  this.setState({\r\n\t    playerHands: playerHands,\r\n      computerHands: computerHands,\r\n      isFinishedChange: isFinishedChange,\r\n      playerRole: playerRole,\r\n      computerRole: computerRole,\r\n      winner: winner})\r\n\t}\r\n\r\n\tsetHands = (hand) => {\r\n\t  hand.isChange = !hand.isChange;\r\n\t  var currentHands = this.state.playerHands;\r\n\t  const targetIndex = currentHands.findIndex((h) => {\r\n\t\t  return(h.type === hand.type && h.number === hand.number);\r\n\t  })\r\n\t  currentHands.splice(targetIndex, 1, hand);\r\n\t  this.setState({playerHands: currentHands})\r\n\t}\r\n\r\n\r\n  render() {\r\n  \tif(this.state.pokerPhase === 'BET') {\r\n  \t\treturn (\r\n  \t\t  <div class=\"poker\">\r\n  \t\t    <Bet\r\n  \t\t      money={this.state.money}\r\n  \t\t      pokerPhaseChange={this.pokerPhaseChange}\r\n  \t\t      pokerPrepare={this.pokerPrepare}\r\n  \t\t      jokerIncluded={this.props.location.state.jokerIncluded}\r\n  \t\t      updateBetMoney={this.updateBetMoney}\r\n  \t\t    />\r\n  \t\t  </div>\r\n  \t\t);\r\n  \t}\r\n    return (\r\n      <div class=\"poker\">\r\n        <CommonHeader />\r\n        <Container className=\"poker_field\">\r\n          <ul>\r\n\t          <CpuHands\r\n\t    \t      hands={this.state.computerHands}\r\n\t    \t      isFinishedChange={this.state.isFinishedChange}\r\n\t            pokerPhase={this.state.pokerPhase}\r\n\t    \t    />\r\n\t    \t    <PlayButton\r\n\t    \t      history={this.props.history}\r\n\t    \t      pokerPhase={this.state.pokerPhase}\r\n\t            pokerPhaseChange={this.pokerPhaseChange}\r\n\t          \tsetAfterPokerMoney={this.setAfterPokerMoney}\r\n\t            surrender={this.surrender}\r\n\t            betMoney={this.state.betMoney}\r\n\t            winner={this.state.winner}\r\n\t    \t    />\r\n    \t    \t<WinOrLossJudge\r\n    \t        playerRole={this.state.playerRole}\r\n    \t    \t  computerRole={this.state.computerRole}\r\n    \t    \t  winner={this.state.winner}\r\n\t            pokerPhase={this.state.pokerPhase}\r\n\t            isBattle={this.state.isBattle}\r\n\r\n    \t    \t/>\r\n    \t    \t<PlayerHands\r\n    \t    \t  playerHands={this.state.playerHands}\r\n    \t        setHands={this.setHands}\r\n    \t    \t  isFinishedChange={this.state.isFinishedChange}\r\n    \t    \t/>\r\n\t        </ul>\r\n\t      </Container>\r\n        <HandChangeButton\r\n          pokerPhaseChange={this.pokerPhaseChange}\r\n          deck={this.state.deck}\r\n          history={this.props.history}\r\n          playerHands={this.state.playerHands}\r\n          computerHands={this.state.computerHands}\r\n          isFinishedChange={this.state.isFinishedChange}\r\n          pokerPhase={this.state.pokerPhase}\r\n          handsChange={this.handsChange}\r\n        />\r\n        <AfterPokerPlayMoney\r\n          pokerPhase={this.state.pokerPhase}\r\n          isBattle={this.state.isBattle}\r\n          money={this.state.afterPokerMoney}\r\n        />\r\n        <AfterPokerPlayingButtons\r\n\t        stateReset={this.stateReset}\r\n\t        jokerIncluded={this.props.jokerIncluded}\r\n\t        history={this.props.history}\r\n\t        isFinishedChange={this.state.isFinishedChange}\r\n          pokerPhase={this.state.pokerPhase}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass CpuHands extends Component {\r\n  render() {\r\n\tif(this.props.pokerPhase !== 'AFTER_BATTLE') {\r\n\t  return (\r\n\t\t<div id=\"computer_hands\">\r\n\t\t  <li className=\"behind_hand\"></li>\r\n\t\t  <li className=\"behind_hand\"></li>\r\n\t\t  <li className=\"behind_hand\"></li>\r\n\t\t  <li className=\"behind_hand\"></li>\r\n\t\t  <li className=\"behind_hand\"></li>\r\n\t\t</div>\r\n\t  );\r\n\t}\r\n    const cpuHands =[];\r\n    for(var i in this.props.hands) {\r\n      const text = this.props.hands[i].type === 'JOKER' ? 'JOKER': this.props.hands[i].type+'の'+this.props.hands[i].number;\r\n      cpuHands.push(\r\n        <li className=\"hand_item\">\r\n          <div className=\"hand\">\r\n            <h3>{text}</h3>\r\n          </div>\r\n        </li>\r\n      )\r\n    }\r\n    return (\r\n      <div id=\"computer_hands\">\r\n      \t<ul>\r\n      \t  {cpuHands}\r\n      \t</ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass WinOrLossJudge extends Component {\r\n  render() {\r\n  \tif(this.props.pokerPhase !== 'AFTER_BATTLE') {\r\n      return null;\r\n  \t}\r\n\r\n  \t// 勝負しないを選択した場合\r\n  \tif(this.props.isBattle) {\r\n  \t\treturn(\r\n  \t\t  <div>\r\n          <h3 id=\"result\">勝負を降りました</h3>\r\n        </div>\r\n  \t\t)\r\n  \t}\r\n\r\n  \t// 引き分けの場合\r\n  \tif(this.props.winner === 'NOTHING') {\r\n      return (\r\n\t      <div>\r\n\t        <h3 id=\"computer_role\">CPUの役: {this.props.computerRole.roleName}</h3>\r\n\t        <h3 id=\"result\">引き分けです</h3>\r\n\t        <h3 id=\"player_role\">プレイヤーの役: {this.props.playerRole.roleName}</h3>\r\n\t      </div>\r\n\t    )\r\n    }\r\n\r\n    return (\r\n      <div id=\"win_or_loss_judge\">\r\n        <h3 id=\"computer_role\">CPUの役: {this.props.computerRole.roleName}</h3>\r\n        <h3 id=\"result\">{this.props.winner}の勝利です</h3>\r\n        <h3 id=\"player_role\">プレイヤーの役: {this.props.playerRole.roleName}</h3>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass PlayerHands extends Component {\r\n  render() {\r\n    const playerHands = this.props.playerHands.map((hand) => {\r\n      return(\r\n        <li className=\"hand_item\">\r\n          <Hand hand={hand} setHands={this.props.setHands} isFinishedChange={this.props.isFinishedChange}/>\r\n        </li>\r\n      );\r\n    });\r\n    return (\r\n      <div id=\"player_hands\">\r\n      \t<ul>\r\n      \t  {playerHands}\r\n      \t</ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass Hand extends Component {\r\n\r\n\tchangeStatus = () => {\r\n\t  this.props.setHands(this.props.hand);\r\n\t}\r\n\r\n render() {\r\n\tconst text = this.props.hand.type === 'JOKER' ? 'JOKER': this.props.hand.type+'の'+this.props.hand.number;\r\n\tif(this.props.isFinishedChange) {\r\n\t  return (\r\n\t\t  <div className=\"hand\">\r\n\t      <h3>{text}</h3>\r\n\t    </div>\r\n      )\r\n    }\r\n    return (\r\n      <div className=\"hand\">\r\n      \t<h3>{text}</h3>\r\n      \t<Button color=\"warning\" size=\"lg\" block onClick={this.changeStatus}> {this.props.hand.isChange == true ? '交換' : 'キープ'} </Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass HandChangeButton extends Component {\r\n\thandleToChange = () => {\r\n\t  var request = require('superagent');\r\n\t  const url = window.location;\r\n\t  request\r\n\t    .post(url)\r\n\t    .type('form')\r\n\t    .send({jsonPlayerHands: JSON.stringify(this.props.playerHands),\r\n\t    \t     jsonDeck: JSON.stringify(this.props.deck),\r\n\t    \t     jsonComputerHands: JSON.stringify(this.props.computerHands)})\r\n\t    .then(res => {\r\n\t      const pokerInfo = res.body;\r\n\t      this.props.handsChange(\r\n\t        pokerInfo.playerHands,\r\n\t        pokerInfo.computerHands,\r\n\t        pokerInfo.finishedChange,\r\n\t        pokerInfo.playerRole,\r\n\t        pokerInfo.computerRole,\r\n\t        pokerInfo.winner);\r\n\t      this.props.pokerPhaseChange('CHOICE_BATTLE_OR_FOLD');\r\n\t    })\r\n\t    .catch(err => {\r\n\t    \tif(err.response.body.status === PokerConstNumber.UN_AUTHORIZE_ERROR_CODE) {\r\n      \t\tthis.props.history.push({\r\n        \t\tpathname: '/session-timeout'\r\n        \t})\r\n      \t}\r\n\t    });\r\n\r\n\t}\r\n\r\n  render() {\r\n    if(this.props.isFinishedChange) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div id=\"hand_change\">\r\n\t    <Button onClick={this.handleToChange}>\r\n\t      手札交換\r\n\t    </Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass PlayButton extends Component {\r\n\r\n\t handleToPlaySubmit(e) {\r\n   \tvar request = require('superagent');\r\n       e.preventDefault();\r\n       var currentUrl = window.location.toString();\r\n       const url = currentUrl.slice(0, -4) + 'result';\r\n       request\r\n       .post(url)\r\n       .responseType('text')\r\n       .type('form')\r\n       // 掛け金と勝者の情報を送る\r\n       .send({betMoney: this.props.betMoney, winner: this.props.winner})\r\n       .then(res => {\r\n      \t this.props.setAfterPokerMoney(res.body.money);\r\n         this.props.pokerPhaseChange('AFTER_BATTLE');\r\n         return;\r\n       })\r\n       .catch(err => {\r\n      \t if(err.response.body.status === PokerConstNumber.UN_AUTHORIZE_ERROR_CODE) {\r\n         \t\tthis.props.history.push({\r\n           \t\tpathname: '/session-timeout'\r\n           \t})\r\n       \t }\r\n      \t if(err.response.body.status === PokerConstNumber.FORBIDDEN_ERROR_CODE) {\r\n        \t\tthis.props.history.push({\r\n          \t\tpathname: '/forbidden'\r\n          \t})\r\n      \t }\r\n      \t if(err.response.body.status === PokerConstNumber.UN_EXPECTED_ERROR_CODE) {\r\n        \t this.props.history.push({\r\n        \t\t pathname: '/error'\r\n        \t })\r\n      \t }\r\n       });\r\n   }\r\n\r\n\t handleSurrenderSubmit(e) {\r\n     this.props.surrender();\r\n     this.props.pokerPhaseChange('AFTER_BATTLE');\r\n   }\r\n\r\n\trender() {\r\n\t\tif(this.props.pokerPhase !== 'CHOICE_BATTLE_OR_FOLD') {\r\n      return null;\r\n\t\t}\r\n    return (\r\n      <div id=\"after_poker_playing_buttons\">\r\n        <h2>勝負しますか？</h2>\r\n        <Button onClick={this.handleToPlaySubmit.bind(this)}>\r\n\t        勝負する\r\n\t      </Button>\r\n\t      <Button onClick={this.handleSurrenderSubmit.bind(this)}>\r\n\t        勝負しない\r\n\t      </Button>\r\n\t    </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass AfterPokerPlayMoney extends Component {\r\n\r\n  render() {\r\n  \t// pokerPhaseがAFTER_BATTLEでない or 勝負しない場合は何も表示しない\r\n  \tif(this.props.pokerPhase !== 'AFTER_BATTLE' || this.props.isBattle) {\r\n      return null;\r\n  \t}\r\n\r\n    return (\r\n      <div id=\"after_poker_money\" style={{ margin: 'auto', width: 300 }}>\r\n        <h3>勝負後の所持金: {this.props.money}円</h3>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass AfterPokerPlayingButtons extends Component {\r\n\r\n  render() {\r\n  \t// pokerPhaseがAFTER_BATTLEでない場合は何も表示しない\r\n  \tif(this.props.pokerPhase !== 'AFTER_BATTLE') {\r\n      return null;\r\n  \t}\r\n\r\n    return (\r\n      <div id=\"after_poker_playing_buttons\">\r\n\t\t  <RetryButton\r\n\t      stateReset={this.props.stateReset}\r\n\t      jokerIncluded={this.props.jokerIncluded}\r\n\t      history={this.props.history}\r\n\t      isFinishedChange={this.props.isFinishedChange}\r\n\t\t />\r\n\t\t <RestartButton\r\n\t\t   history={this.props.history}\r\n\t\t   jokerIncluded={this.props.jokerIncluded}\r\n\t\t   isFinishedChange={this.props.isFinishedChange}\r\n\t\t / >\r\n\t </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass RetryButton extends Component {\r\n\r\n\t // 所持金情報を取得して、stateを初期化する。\r\n\t handleSubmit(e) {\r\n    \tvar request = require('superagent');\r\n        e.preventDefault();\r\n        var currentUrl = window.location.toString();\r\n        const url = currentUrl.slice(0, -4) + 'bet';\r\n        request\r\n        .get(url)\r\n        .responseType('text')\r\n        .type('form')\r\n        .then(res => {\r\n          // stateを初期化する\r\n          this.handleToRePlay(res.body.money);\r\n        })\r\n        // システムエラー画面へ遷移\r\n        .catch(err => {\r\n        \tif(err.response.body.status === PokerConstNumber.UN_AUTHORIZE_ERROR_CODE) {\r\n        \t\tthis.props.history.push({\r\n          \t\tpathname: '/session-timeout'\r\n          \t})\r\n        \t}\r\n      \t\tthis.props.history.push({\r\n  \t\t\t\t  pathname: '/error'\r\n  \t\t\t  })\r\n        });\r\n      }\r\n        handleToRePlay = (money) => {\r\n          this.props.stateReset(money);\r\n        }\r\n\r\n  render() {\r\n    if(!this.props.isFinishedChange) {\r\n\t    return null;\r\n\t  }\r\n\r\n    return (\r\n\t    <Button onClick={this.handleSubmit.bind(this)}>\r\n\t      もう一度\r\n\t    </Button>\r\n    )\r\n  }\r\n}\r\n\r\nclass RestartButton extends Component {\r\n\r\n\thandleToRestart = (body) => {\r\n\t\tthis.props.history.push({\r\n\t\t\tpathname: '/'\r\n\t\t})\r\n  }\r\n  render() {\r\n    if(!this.props.isFinishedChange) {\r\n\t    return null;\r\n\t  }\r\n    return (\r\n\t    <Button onClick={this.handleToRestart.bind(this)}>\r\n\t      スタートに戻る\r\n\t    </Button>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(PokerField);","import React, { Component } from 'react';\r\nimport './userRegister.css'\r\nimport { withRouter } from 'react-router';\r\nimport CommonHeader from './commonHeader'\r\nimport {BrowserRouter, Switch, Route, Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Form, Input, ButtonGroup, Button } from 'reactstrap';\r\nimport { Grid, FormGroup } from 'react-bootstrap';\r\nimport * as PokerConstNumber from './PokerConstNumber.js';\r\nimport * as PokerConstMessage from './PokerConstMessage.js';\r\n\r\nclass UserRegister extends Component {\r\n\r\n\tconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userName: '',\r\n      password: '',\r\n      confirmationPassword: '',\r\n      errorMessage: []\r\n    };\r\n  }\r\n\r\n\tusernameHandleChange(event) {\r\n    this.setState({userName: event.target.value});\r\n  }\r\n\r\n\tpasswordHandleChange(event) {\r\n    this.setState({password: event.target.value});\r\n  }\r\n\r\n\tconfirmationPasswordHandleChange(event) {\r\n    this.setState({confirmationPassword: event.target.value});\r\n  }\r\n\r\n\thandleSubmit(e) {\r\n\r\n\t\t// リクエスト前に必須チェック・文字数チェック・パスワード一致チェックを実施\r\n\t\tvar errorList = [];\r\n\t\t// 必須チェック\r\n\t\tthis.nullOrEmptyCheck(errorList, this.state.userName, PokerConstMessage.userNameNotInputMessage);\r\n\t\tthis.nullOrEmptyCheck(errorList, this.state.password, PokerConstMessage.passwordNotInputMessage);\r\n\t\tthis.nullOrEmptyCheck(errorList, this.state.confirmationPassword, PokerConstMessage.confirmationPasswordNotInputMessage);\r\n\t\t// 文字数チェック\r\n\t\tthis.lengthOverCheck(errorList, this.state.userName, PokerConstNumber.USER_NAME_MAX_LENGTH, PokerConstMessage.userNameExceedMaxLengthMessage);\r\n\t\tthis.lengthOverCheck(errorList, this.state.password, PokerConstNumber.PASSWORD_MAX_LENGTH, PokerConstMessage.passwordExceedMaxLengthMessage);\r\n\t\t// パスワード一致チェック\r\n\t\tthis.passwordSameCheck(errorList, this.state.password, this.state.confirmationPassword);\r\n\r\n    if(errorList.length != 0) {\r\n      this.setState({errorMessage: errorList});\r\n      return;\r\n    }\r\n\r\n\t\tvar request = require('superagent');\r\n\t    e.preventDefault();\r\n\t    const url = window.location + '';\r\n\t    request\r\n\t    .post(url)\r\n\t    .type('form')\r\n\t    .send({userName: this.state.userName, password: this.state.password})\r\n\t    .then(res => {\r\n\t    \tthis.props.history.push({\r\n\t\t\t\t  pathname: '/'\r\n\t\t\t  })\r\n\t    })\r\n\t\t\t.catch(err => {\r\n\t\t\t\tif(err.response.body.status === PokerConstNumber.UN_EXPECTED_ERROR_CODE) {\r\n\t\t\t\t  // システムエラー画面へ遷移\r\n      \t\tthis.props.history.push({\r\n  \t\t\t\t  pathname: '/error'\r\n  \t\t\t  })\r\n      \t}\r\n        errorList.push(err.response.body.message)\r\n        this.setState({errorMessage: errorList})\r\n\t\t\t});\r\n\t  }\r\n\r\n\t// キャンセルボタンをクリック\r\n\thandleCancel() {\r\n\t\tthis.props.history.push({\r\n\t\t\tpathname: '/'\r\n\t\t});\r\n\t}\r\n\r\n\t// 必須チェック\r\n\tnullOrEmptyCheck(errorList, value, errorMessage) {\r\n\t\tif(!(value)) {\r\n\t\t\terrorList.push(errorMessage);\r\n\t\t}\r\n\t\treturn errorList;\r\n\t}\r\n\r\n  // 文字数チェック\r\n\tlengthOverCheck(errorList, value, limit, errorMessage) {\r\n\t\tif(value.length > limit) {\r\n      errorList.push(errorMessage);\r\n\t\t}\r\n\t\treturn errorList;\r\n\t}\r\n\r\n\t// パスワード一致チェック\r\n\tpasswordSameCheck(errorList, password, confirmationPassword) {\r\n    if(password !== confirmationPassword){\r\n      errorList.push(PokerConstMessage.passwordNotMatchMessage);\r\n    }\r\n    return errorList;\r\n\t}\r\n\r\n\r\n\r\n\trender() {\r\n    return (\r\n      <div>\r\n        <CommonHeader />\r\n      \t<h2 id=\"title\">茶 圓 ポ ー カ ー ユーザー登録</h2>\r\n      \t<Container>\r\n      \t  <Row>\r\n      \t  <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n        \t    <div>\r\n                {this.state.errorMessage.map((item) => (\r\n                  <p class=\"alert alert-danger\">{item}</p>\r\n                 ))}\r\n              </div>\r\n              </Col>\r\n              </Row>\r\n    \t      <form>\r\n    \t        <Row>\r\n    \t          <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n    \t          \t<FormGroup>\r\n    \t          \t<label>ユーザー名入力</label>\r\n    \t          \t<Input type=\"text\" onChange={this.usernameHandleChange.bind(this)}></Input>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n  \t          <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <FormGroup>\r\n                <label>パスワード入力</label>\r\n                <Input type=\"password\" onChange={this.passwordHandleChange.bind(this)}></Input>\r\n              </FormGroup>\r\n              </Col>\r\n              </Row>\r\n              <Row>\r\n  \t          <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n              <FormGroup>\r\n                <label>パスワード(確認)入力</label>\r\n                <Input type=\"password\" onChange={this.confirmationPasswordHandleChange.bind(this)}></Input>\r\n              </FormGroup>\r\n              </Col>\r\n              </Row>\r\n              <Row>\r\n              <Col sm=\"12\" md={{ size: 5, offset: 7 }}>\r\n              <ButtonGroup id=\"user_register_buttons\">\r\n      \t    \t    <Button color=\"primary\" onClick={this.handleSubmit.bind(this)}>登録</Button>\r\n      \t    \t    <Button color=\"primary\" onClick={this.handleCancel.bind(this)}>キャンセル</Button>\r\n      \t    \t</ButtonGroup>\r\n      \t    \t</Col>\r\n      \t    \t</Row>\r\n    \t      </form>\r\n    \t    </Container>\r\n\t  </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(UserRegister);","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { Container, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass SystemError extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      \t<h1 id=\"title\">茶 圓 ポ ー カ ー システムエラー</h1>\r\n      \t<Container id=\"form\">\r\n      \t  <Row>\r\n\t          <p>予期せぬエラーが発生しました</p>\r\n\t        </Row>\r\n\t        <Row>\r\n            <Link to=\"/\">スタート画面へ</Link>\r\n          </Row>\r\n\t      </Container>\r\n\t    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(SystemError);","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { Form } from 'reactstrap';\r\nimport './SessionTimeOut.css';\r\n\r\n\r\nclass SessionTimeOut extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div class=\"body\">\r\n        <Container class=\"container\">\r\n          <Row>\r\n            <Col md={{ size: 6, offset: 3 }}>\r\n          \t\t<h4>セッションタイムアウトもしくはアクセストークンの期限が切れました。</h4>\r\n          \t</Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={{ size: 6, offset: 3 }}>\r\n          \t\t<h4>恐れ入りますが、もう一度ログインしなおしてください。</h4>\r\n          \t</Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={{ size: 6, offset: 5 }}>\r\n      \t  \t  <a href=\"http://localhost:8083/login\">ログイン画面へ</a>\r\n      \t  \t</Col>\r\n        \t</Row>\r\n      \t</Container>\r\n\t    </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withRouter(SessionTimeOut);","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { Container } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Forbidden extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n      \t<h1 id=\"title\">茶 圓 ポ ー カ ー 権限エラー</h1>\r\n      \t<Container id=\"form\">\r\n\t        <p>必要な権限がありませんでした。</p>\r\n\t        <Link to=\"/\">スタート画面へ</Link>\r\n\t      </Container>\r\n\t    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Forbidden);","import React, { Component } from 'react';\r\nimport Modal from \"react-modal\";\r\nimport { Button } from 'reactstrap';\r\n\r\nclass LoginBonusPopup extends Component {\r\n\r\n\tconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: this.props.isOpen,\r\n      userName: this.props.userName\r\n    };\r\n  }\r\n\r\n\thandleToClose(e) {\r\n\t\tthis.setState({isOpen: false});\r\n\t}\r\n\r\n\trender() {\r\n    return (\r\n      <div>\r\n        <Modal\r\n          isOpen={this.state.isOpen}\r\n        >\r\n         {this.state.userName}さん本日初ログインです。100円贈呈します。\r\n        <Button id=\"closeBunnton\" onClick={this.handleToClose.bind(this)}>閉じる</Button>\r\n      </Modal>\r\n\r\n\t    </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default LoginBonusPopup;\r\n","import React, { Component } from 'react';\nimport './pokerStart.css';\nimport logo from './logo.svg';\nimport './App.css';\nimport Potal from './Potal';\nimport PokerField from './PokerField';\nimport UserRegister from './UserRegister'\nimport SystemError from './SystemError'\nimport SessionTimeOut from './SessionTimeOut'\nimport Forbidden from './forbidden'\nimport CommonHeader from './commonHeader'\nimport Bet from './bet';\nimport { withRouter } from 'react-router';\nimport {BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport { Button, Container, Row, Col, Form, FormGroup, Input } from 'reactstrap';\nimport * as PokerConstNumber from './PokerConstNumber.js';\nimport * as PokerConstMessage from './PokerConstMessage.js';\nimport LoginServicePopUp from './LoginServicePopUp';\nimport Modal from \"react-modal\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n          <div>\n            <Switch>\n              <Route exact path={'/'} component={PokerStart}/>\n              <Route exact path={'/potal'} component={Potal}/>\n              <Route exact path={'/user'} component={UserRegister}/>\n              <Route exact path={'/play'} component={PokerField}/>\n              <Route exact path={'/error'} component={SystemError}/>\n              <Route exact path={'/forbidden'} component={Forbidden}/>\n              <Route exact path={'/session-timeout'} component={SessionTimeOut}/>\n            </Switch>\n          </div>\n        </BrowserRouter>\n    );\n  }\n}\n\nclass PokerStart extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokerIncluded: true\n    };\n  }\n\n  handleSubmit(e) {\n\tvar request = require('superagent');\n    e.preventDefault();\n    const url = '/bet'\n    request\n    .get(url)\n    .responseType('text')\n    .then(res => {\n      this.handleToBet(res.body, this.state.jokerIncluded);\n    })\n    // システムエラー画面へ遷移\n    .catch(err => {\n    \tif(err.response.body.status === PokerConstNumber.UN_AUTHORIZE_ERROR_CODE) {\n    \t\tthis.props.history.push({\n      \t\tpathname: '/session-timeout'\n      \t})\n      \treturn;\n    \t}\n    \tif(err.response.body.status === PokerConstNumber.UN_EXPECTED_ERROR_CODE) {\n    \t  this.props.history.push({\n    \t\t  pathname: '/error'\n    \t  })\n    \t  return;\n    \t}\n    });\n\n\n  }\n    handleToBet = (body, jokerIncluded) => {\n    \tthis.props.history.push({\n    \t\tpathname: '/play',\n    \t\tstate: {betMoney: body, jokerIncluded: jokerIncluded}\n    \t})\n    }\n\n  handleChange(event) {\n\tconst jokerIncluded = event.target.value == 'included' ? true : false;\n    this.setState({jokerIncluded: jokerIncluded});\n  }\n\n  render() {\n    return (\n      <div>\n        <CommonHeader />\n        <LoginServicePopUp\n          isOpen={this.props.location.state === undefined ? false : this.props.location.state.isOpen}\n          username={this.props.location.state === undefined ? '' : this.props.location.state.userName}\n        />\n      \t<h1 id=\"title\">茶 圓 ポ ー カ ー</h1>\n\t    <Container id=\"form\">\n\t      <Form>\n\t        <FormGroup>\n\t          <Input type=\"select\" onChange={this.handleChange.bind(this)} name=\"select\" id=\"exampleSelect\">\n\t            <option value=\"included\">ジョーカーを含む</option>\n\t            <option value=\"non-included\">ジョーカーを含まない</option>\n\t          </Input>\n\t        </FormGroup>\n\t    \t<Button color=\"primary\" size=\"lg\" block onClick={this.handleSubmit.bind(this)}>START</Button>\n\t      </Form>\n\t    </Container>\n\t  </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/poker.fd26ae51.png\";"],"sourceRoot":""}